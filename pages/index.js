import Layout from "../components/Layout";
import { useState, useEffect } from "react";
import Pokemon from "../components/Pokemon";
import Head from "next/head";

export default function Home({ initialPokemon }) {
  const [pokemon, setPokemon] = useState(initialPokemon);
  const [offset, setOffet] = useState(0);

  const [input, setInput] = useState("");

  const fetchPokemon = async (url, next) => {
    const response = await fetch(url);
    const nextPokemon = await response.json();

    setOffet(next ? offset + 20 : offset - 20);
    setPokemon(nextPokemon);
  };

  const handleInputChange = (e) => {
    setInput(e.target.value);
  };
  return (
    <Layout title={"Pikachu Website"}>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="true"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Inter:wght@300;500;800&family=Montserrat:wght@100;200;300;500;700&family=Quicksand:wght@300;400;500;600;700&display=swap"
          rel="stylesheet"
        ></link>
      </Head>

      <div className="flex justify-center pt-12">
        <input
          type="text"
          placeholder="Search"
          className="mx-8 w-full sm:w-3/4 bg-gray-100 px-6 py-2 rounded border border-poke-yellow outline-none"
          onChange={handleInputChange}
          value={input}
        />
      </div>

      <div className=" mx-14 pt-10 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6">
        {pokemon.results.map((char, index) => (
          <Pokemon key={index} pokemon={char} index={index + offset} />
        ))}
      </div>

      <div className="mt-4 flex justify-center gap-8 py-7">
        <button
          disabled={!pokemon.previous}
          onClick={() => fetchPokemon(pokemon.previous, false)}
          className="relative inline-block text-lg group transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 duration-300"
        >
          <span className="relative z-10 block px-5 py-3 overflow-hidden font-medium leading-tight text-gray-800  border-2 border-gray-900 rounded-lg hover:text-[#4b497c]">
            <span className="absolute inset-0 w-full h-full px-5 py-3 rounded-lg bg-[#cab3d2]"></span>
            <span className="relative">Back</span>
          </span>
          <span
            className="absolute bottom-0 right-0 w-full h-12 -mb-1 -mr-1 bg-gray-900 rounded-lg "
            data-rounded="rounded-lg"
          ></span>
        </button>
        <div>--</div>
        <button
          disabled={!pokemon.next}
          onClick={() => fetchPokemon(pokemon.next, true)}
          className="relative inline-block text-lg group transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 duration-300"
        >
          <span className="relative z-10 block px-5 py-3 overflow-hidden font-medium leading-tight text-gray-800  border-2 border-gray-900 rounded-lg hover:text-[#4b497c] ">
            <span className="absolute inset-0 w-full h-full px-5 py-3 rounded-lg bg-[#cab3d2]"></span>
            <span className="relative">Next</span>
          </span>
          <span
            className="absolute bottom-0 right-0 w-full h-12 -mb-1 -mr-1 bg-gray-900 rounded-lg "
            data-rounded="rounded-lg"
          ></span>
        </button>
      </div>
    </Layout>
  );
}

export async function getStaticProps(context) {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon/");
  const initialPokemon = await response.json();

  return {
    props: {
      initialPokemon,
    },
  };
}
